(define (make-account balance passwd)
  (define (incorrect? pw)
    (not (eq? pw passwd)))
  (define (withdraw amount)
    (if (>= balance amount)
      (begin (set! balance (- balance amount))
             balance)
      "Insufficient funds"))
  (define (deposit amount)
    (set! balance (+ balance amount))
    balance)
  (define (call-the-cops)
    (error "You died!"))
  (let ((fc 0))
    (define (dispatch pw m)
      (if (incorrect? pw)
        (begin (set! fc (+ fc 1))
               (if (>= fc 7)
                 (call-the-cops)
                 (lambda x "Incorrect password")))
        (begin (set! fc 0)
               (cond ((eq? m 'withdraw) withdraw)
                     ((eq? m 'deposit) deposit)
                     (else (error "Unknown request -- MAKE-ACCOUNT"
                                  m))))))
    dispatch))

(define acc (make-account 100 'secret-password))

(define (main args)
  (print ((acc 'secret-password 'withdraw) 40))
  (print ((acc 'secret-password 'deposit) 50))
  (print ((acc 'some-other-password 'deposit) 50))
  (print ((acc 'secret-password 'deposit) 30))
  (print ((acc 'some-other-password 'deposit) 1))
  (print ((acc 'some-other-password 'deposit) 2))
  (print ((acc 'some-other-password 'deposit) 3))
  (print ((acc 'some-other-password 'deposit) 4))
  (print ((acc 'some-other-password 'deposit) 5))
  (print ((acc 'some-other-password 'deposit) 6))
  (print ((acc 'some-other-password 'deposit) 7)))
